apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'


dependencies {
    testCompile project(path:':saos-common', configuration:'testArtifacts')
    testCompile project(path:':saos-persistence', configuration:'testArtifacts')
    testCompile project(path:':saos-search', configuration:'testArtifacts')
    testCompile project(path:':saos-restful-web-api', configuration:'testArtifacts')
    testCompile project(path:':saos-enrichment', configuration:'testArtifacts')
    
    compile project(path:':saos-batch')
    compile project(path:':saos-restful-web-api')
    compile project(path:':saos-search')
    compile project(path:':saos-enrichment')
    
    compile lib.'org.apache.tiles:tiles-jsp'
    providedCompile lib.'javax.servlet:javax.servlet-api'
    providedCompile lib.'javax.servlet:jsp-api'
    compile lib.'javax.servlet:jstl'
    compile lib.'org.springframework.security:spring-security-web'
    compile lib.'org.springframework.security:spring-security-config'
    compile lib.'org.springframework.security:spring-security-taglibs'
    compile lib.'joda-time:joda-time-jsptags'
    compile lib.'org.springframework:spring-webmvc'
    compile lib.'org.springframework.hateoas'
    compile lib.'com.fasterxml.jackson.core:jackson-databind'
    compile lib.'com.fasterxml.jackson.core:jackson-core'
    compile lib.'au.com.bytecode:opencsv'
    testCompile lib.'com.jayway.jsonpath:json-path'
    testCompile lib.'com.jayway.jsonpath:json-path-assert'
    providedCompile lib.'javax.el:javax.el-api'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://dl.bintray.com/robfletcher/gradle-plugins' }
		jcenter()
    }
    dependencies {

    }
}

eclipse.classpath.file {
    // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}

task version(dependsOn: build) {
	def propFile = new File("${project.rootDir}/saos-webapp/src/main/resources/saos.version.properties");
    propFile.createNewFile();
	propFile.write("#Generated by Gradle\r\n" + "saos.version=${version}\r\n");
}

build.dependsOn ':saos-webapp-grunt:gruntBuild'
war.mustRunAfter ':saos-webapp-grunt:gruntBuild'

