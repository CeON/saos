allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'eclipse-wtp' /** without this wtp does not upload dependant projects, http://stackoverflow.com/questions/23697438/gradle-groovy-project-dependent-on-java-project*/
    apply plugin: 'groovy'
    apply plugin: 'maven' /** to generate poms - they will be uploaded to the maven repository along with jars/wars */
    apply plugin: 'idea'

    version = '0.0.1-SNAPSHOT'
    group = 'pl.edu.icm.saos'

    sourceCompatibility = 1.8
    
}


subprojects {
    
    

    repositories {
       mavenCentral()
       maven { url "http://repo.spring.io/libs-milestone" }
       maven { url "http://maven.icm.edu.pl/artifactory/repo"}
         
    }

    ext.springVersion = "4.0.5.RELEASE"
    

    ext.lib = [
        'junit:junit' : 'junit:junit:4.11',
        'org.apache.commons:commons-lang3' :'org.apache.commons:commons-lang3:3.3.2',
        'commons-collections:commons-collections' :'commons-collections:commons-collections:3.2.1',
        'commons-codec:commons-codec' :'commons-codec:commons-codec:1.9',
        'commons-io:commons-io':'commons-io:commons-io:2.4',
        'org.apache.commons:commons-compress':'org.apache.commons:commons-compress:1.8.1',
        'commons-fileupload:commons-fileupload':'commons-fileupload:commons-fileupload:1.3.1',
        
        'joda-time:joda-time' :'joda-time:joda-time:2.3',
        'joda-time:joda-time-jsptags' :'joda-time:joda-time-jsptags:1.1.1',
        
        'org.springframework.data:spring-data-jpa' :'org.springframework.data:spring-data-jpa:1.7.1.RELEASE',
        
        'org.springframework.security:spring-security-taglibs' :'org.springframework.security:spring-security-taglibs:3.2.4.RELEASE',
        'org.springframework.security:spring-security-web' :'org.springframework.security:spring-security-web:3.2.4.RELEASE',
        'org.springframework.security:spring-security-config' :'org.springframework.security:spring-security-config:3.2.4.RELEASE',
    
        'org.springframework.batch:spring-batch-core' :'org.springframework.batch:spring-batch-core:3.0.0.RELEASE',
        
        'org.springframework.batch:spring-batch-admin-manager':'org.springframework.batch:spring-batch-admin-manager:1.3.0.RELEASE',
        'org.springframework.batch:spring-batch-admin-resources':'org.springframework.batch:spring-batch-admin-resources:1.3.0.RELEASE',
        
        
        'org.apache.tiles:tiles-jsp' :'org.apache.tiles:tiles-jsp:3.0.4',
        'javax.servlet:javax.servlet-api' :'javax.servlet:javax.servlet-api:3.1.0',
        'javax.servlet:jsp-api' :'javax.servlet:jsp-api:2.0',
        'javax.servlet:jstl' :'javax.servlet:jstl:1.2',
        
        'org.hibernate:hibernate-core' :'org.hibernate:hibernate-core:4.3.5.Final',
        'org.hibernate:hibernate-ehcache' :'org.hibernate:hibernate-ehcache:4.3.5.Final',
        'org.hibernate:hibernate-entitymanager' :'org.hibernate:hibernate-entitymanager:4.3.5.Final',
        'org.hibernate:hibernate-validator':'org.hibernate:hibernate-validator:5.1.2.Final',
        'javax.el:javax.el-api':'javax.el:javax.el-api:3.0.0',
        
        'org.apache.commons:commons-dbcp2' :'org.apache.commons:commons-dbcp2:2.0.1',
        'org.postgresql:postgresql' :'org.postgresql:postgresql:9.3-1101-jdbc41',
        'org.jadira.usertype:usertype.core' :'org.jadira.usertype:usertype.core:3.2.0.GA',
        'net.sf.ehcache:ehcache' :'net.sf.ehcache:ehcache:2.8.2',

        'org.apache.solr:solr-core' :'org.apache.solr:solr-core:4.9.0',
        'org.apache.solr:solr-solrj' :'org.apache.solr:solr-solrj:4.9.0',
        'org.apache.lucene:lucene-analyzers-morfologik' :'org.apache.lucene:lucene-analyzers-morfologik:4.9.0',
       
        'org.springframework:spring-context' :'org.springframework:spring-context:'+springVersion,
        'org.springframework:spring-webmvc' :'org.springframework:spring-webmvc:'+springVersion,
        'org.springframework:spring-orm' :'org.springframework:spring-orm:'+springVersion,
        'org.springframework:spring-test' :'org.springframework:spring-test:'+springVersion,
        'org.springframework:spring-oxm' :'org.springframework:spring-oxm:'+springVersion,
        'org.springframework:spring-web' :'org.springframework:spring-web:'+springVersion,
        
        'org.slf4j:slf4j-api' :'org.slf4j:slf4j-api:1.7.7',
        'org.slf4j:slf4j-simple' :'org.slf4j:slf4j-simple:1.7.7',
        'ch.qos.logback:logback-classic' :'ch.qos.logback:logback-classic:1.0.13',
        
        'org.mockito:mockito-core' :'org.mockito:mockito-core:1.9.5',
        'com.google.guava:guava' :'com.google.guava:guava:17.0',
        'org.powermock:powermock-api-mockito' :'org.powermock:powermock-api-mockito:1.5.5',
        'org.powermock:powermock-module-junit4' :'org.powermock:powermock-module-junit4:1.5.5',
        'com.googlecode.catch-exception:catch-exception':'com.googlecode.catch-exception:catch-exception:1.2.0',
        'org.assertj:assertj-core':'org.assertj:assertj-core:1.6.1',
        'com.tngtech.java:junit-dataprovider':'com.tngtech.java:junit-dataprovider:1.9.2',
        
        'org.springframework.hateoas' : 'org.springframework.hateoas:spring-hateoas:0.15.0.RELEASE',
        'com.fasterxml.jackson.core:jackson-core' : 'com.fasterxml.jackson.core:jackson-core:2.4.1',
        'com.fasterxml.jackson.core:jackson-annotations' : 'com.fasterxml.jackson.core:jackson-annotations:2.4.1',
        'com.fasterxml.jackson.core:jackson-databind' : 'com.fasterxml.jackson.core:jackson-databind:2.4.1',
        'com.jayway.jsonpath:json-path' : 'com.jayway.jsonpath:json-path:0.9.1',
        'com.jayway.jsonpath:json-path-assert' : 'com.jayway.jsonpath:json-path-assert:0.9.1',
        'org.hamcrest:hamcrest-library' : 'org.hamcrest:hamcrest-library:1.3',
        'org.codehaus.groovy:groovy-all' : 'org.codehaus.groovy:groovy-all:2.3.7',
        'org.spockframework:spock-core' : 'org.spockframework:spock-core:0.7-groovy-2.0'

        
    ]
    
    dependencies {
        compile lib.'org.apache.commons:commons-lang3'
        testCompile (lib.'junit:junit') {
            exclude module: 'hamcrest-core'
        }
        testCompile lib.'org.springframework:spring-test'
        testCompile (lib.'org.mockito:mockito-core') {
            exclude module: 'hamcrest-core'
        }
        testCompile lib.'org.hamcrest:hamcrest-library'
        testCompile lib.'com.googlecode.catch-exception:catch-exception'
        testCompile lib.'org.assertj:assertj-core'
        testCompile lib.'com.tngtech.java:junit-dataprovider'
        testCompile lib.'org.codehaus.groovy:groovy-all'
        testCompile (lib.'org.spockframework:spock-core') {
            exclude module: 'junit-dep'
        }
        testCompile lib.'org.powermock:powermock-api-mockito'
        testCompile lib.'org.powermock:powermock-module-junit4'

        compile lib.'com.google.guava:guava'
        compile lib.'commons-collections:commons-collections'
        compile lib.'org.apache.commons:commons-lang3'
        compile lib.'org.slf4j:slf4j-api'
        compile lib.'ch.qos.logback:logback-classic'
        compile lib.'org.codehaus.groovy:groovy-all'
        
    }

    
    jar {
        manifest.attributes provider: 'University of Warsaw, ICM'
    }
    
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    
    task wrapper(type: Wrapper) {
        gradleVersion = '2.0'
    }
    
    
    task testJar(type: Jar, dependsOn: testClasses) {
        classifier = 'tests'
        from sourceSets.test.output
    }
    
    configurations {
        testArtifacts
    }
    
    artifacts {
        testArtifacts testJar
    }
    
    test {
        useJUnit {
            excludeCategories "pl.edu.icm.saos.common.testcommon.category.SlowTest"
        }
    }
    
    task slowTest(type: Test) {
        useJUnit {
            includeCategories "pl.edu.icm.saos.common.testcommon.category.SlowTest"
        }
    }
    
    tasks.withType(Test) {
        testLogging {
            events 'passed'
            exceptionFormat = 'full'
        }
    }
    
    
    /* this below just to correct a bug of gradleEclipseWtp, without this the plugin copies also the test classes to the server */
    eclipse.classpath.file.whenMerged { cp ->
        cp.entries.findAll { it instanceof org.gradle.plugins.ide.eclipse.model.SourceFolder && it.path.startsWith("src/test/") }*.output = "test-bin"
    }
}


